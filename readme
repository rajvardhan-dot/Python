# day 3:
# modules and pip
# modules is use to borrow others code
# two types of modules
# 1)external : written by user (phone is the example, we dont know implementatio)
# 2) Built-in modules: install by pip(no need to install externally) these are already present module in python
# pip install pandas means i want to install a package name pandas, use for data analysis
# pip is package manager , means whatever things u wnat pip will bring and you can use that.

# day 4:

# a sequence of instruction will get evaluate using python

# day 5:
# escapse sequence , print , comments
# \n = escape
# ctrl + / = for commmet multiple lines
# \"rajvardhan\" = backslash use to put sentense in a string we can give 

# day 6:
# about variables: container who hold data
# int , string , float , double , char, boolean.
# *concatanation is possible between same type of data type variable
# *type(a) = use to know the type of variable
# *sequence data -> list , tuple
# *list is mutable(can be change) , tuple is immutable(can not change )
# *list is collection of different data element
# *dictionary datatype = data will store in key value pair(mapping);
# ***in python everything is a object***

# day7:
# Operators:
# 1)Arithmetic operators
# 2)Assignment operators
# 3)Comparison operators
# 4)Logical operators
# 5)Identity operators
# 6)Membership operators
# 7)Bitwise operators 

# print(15 // 6) : floor division operator means when you want floor value
# print(15 % 6) : modulus operator means when you want remainder value
# print(15 ** 6) : power operator means when you want power value

# print("the value of " , a , "+" , b,"is:",a+b) : concatenation

# day8:
# ***alt+shift+downarrow-> line will replicate***
# ***alt+shift+uparrow-> line will delete***

# day9:
# *typecasting: conversion of one datatype to other called typecasting
# *explicit conversion: when i will do conversion
# *implicit conversion: when python will do conversion
# *implicit conversion is not possible in python
# * according to the level in implicit one datatype convert to other type
# *pyhton convert smaller datatype to a higher datatype
# *int to float

# day10:
# user input
# *input() function is used to take input from user
# *input() function will take input as string
# *int(input()) function will take input as integer
# *float(input()) function will take input as float

# day11:
# string in python
# *string is a sequence of character
# *no functional difference between single quote and double quote

# types to print string
# single quote in last and double in between
# both side double quote
# both side triple quote to print large para with single and double quote
# #silicing in string
# print("hello"[0]) : to print first character
# #looping in string
# for i in "hello":
# print(i) : to print all character

# day12:
# len() : function
# slicing : square bracket use for slicing
# string is immutable

# day13:
# if else conditional statement in python

# all string function to perform with the str
# strip(): Removes characters from both ends.
# lstrip(): Removes characters from the beginning (left side).
# rstrip(): Removes characters from the end (right side).

#day14:
if else statement

#day15
excercise

#day16
about match case

day17
about looping statement

day 18

day 19

day20:
    functions:
        # use of pass in python is to tell program that skip this functiona and go for the next function execution 
        #later i will write this function
        #function is use to divide bigger problem into smaller
functions are two types:
    built-in: min,max,range,tuples,dict
    user define: by using def keyword


day 21:
    function argument (how to pass in the function)
    There are four types of arguments that we can provide in a function:

Default Arguments
Keyword Arguments
Variable length Arguments
Required Arguments

def name(*name): use to store tuple values
def name(**name):use to store value in the form of dcintionary 

day22:
    #about list uses
    #list comprehension
    #List Comprehension
List comprehension offers a shorter syntax when you want to create a new list based on the values of an existing list.
    
    
day23:
    list method
    sort()
    reverse()
    append()
    index()
    copy()
    insert()
    extend()
    
day24:
    for company program we will use the list
    in case where we dont want to others change the values 
    
day25:
    how we can manipulate the tuple by using the list
    tup()
    temp = list(tup)
    temp.append()
    tup = tuple(temp)
     ex:
         tup = (1,2,5,6,7,8)
            temp = list(tup)
            temp.append(70)
            tup = tuple(temp)
            print(tup)
day26:
    && in python will be and
    
day27:
    kbc game
day28:
    fstring: uses of fstring
    .2f:use to print value till two decimal place
    txt = f"for only {price:.2f} dollars!"
    print(f"hey my name is {{name}}  and I am from {{country}}"): double curly braces use to print as it is


***day29***
 docstring:will use after the declaration of the function, it is use to tell a user about the function that how many argument he needs to give
 we an not ignore docstring like the comments
 just after function name we will write docstring
 
 PEP-8:(python enhancement proposal) provide guidelines to coder
 
 zen of python:
     
 day30:
    Recursion:
        
day31:
    sets: is a collection of well defined object

day32: 
    set function
    #union all common elements in both the sets , union will return
    #new set while update will modify the existing set
    #same for the intersection and intersection update
    III. symmetric_difference and symmetric_difference_update():same like the union does
    symmetric_difference: values which are not present in both set
    IV. difference() and difference_update():
        difference means:: Elements present on one set, but not on the other.
        
    The isdisjoint() method checks if items of given set are present in another set. This method returns False if items are present, else it returns True.
    
    issuperset():
The issuperset() method checks if all the items of a particular set are present in the original set. It returns True if all the items are present, else it returns False.

    issubset():
The issubset() method checks if all the items of the original set are present in the particular set. It returns True if all the items are present, else it returns False.
 
    add()
If you want to add a single item to the set use the add() method.

    update()
If you want to add more than one item, simply create another set or any other iterable object(list, tuple, dictionary), and use the update() method to add it into the existing set

   remove()/discard()
We can use remove() and discard() methods to remove items form list.
   
pop()
This method removes the last item of the se

del
del is not a method, rather it is a keyword which deletes the set entirely.
    
clear():
This method clears all items in the set and prints an empty set.

 Check if item exists
You can also check if an item exists in the set or not.


day33:
    dcintionary
    
day34:
    set unordered and dictionary is unordered
  popitem():
The popitem() method removes the last key-value pair from the dictionary.
pop():
The pop() method removes the key-value pair whose key is passed as a parameter.


clear():
The clear() method removes all the items from the list.
update()
The update() method updates the value of the key provided to it if the item already exists in the dictionary, else it creates a new key-value pai

del:
we can also use the del keyword to remove a dictionary item.

day35:
    else with for and while loop
    
day36:
    Exception
day37:
    finally:mainly use in program for concluding task
    